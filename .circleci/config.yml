version: 2

defaults: &defaults
  working_directory: ~/code
  docker:
    - image: circleci/android:api-27-node8-alpha
  environment:
    JVM_OPTS: -Xmx3200m

jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}

      - restore_cache:
          key: gems-{{ checksum "Gemfile.lock" }}
      - run: bundle install --path vendor/bundle
      - save_cache:
          paths:
            - vendor/bundle
          key: gems-{{ checksum "Gemfile.lock" }}

      - run:
          name: Unit test
          command: ./gradlew clean :app:testDebugUnitTestCoverage
      - run:
          name: Check lint
          command: ./gradlew :app:check -x test
      - run:
          name: Run danger
          command: bundle exec danger
      - run:
          name: Move artifacts
          command: |
            ARTIFACTS="/tmp/circle_artifacts"
            mkdir -p "$ARTIFACTS"
            cp -v "app/build/reports/checkstyle/checkstyle.xml" "$ARTIFACTS/"
            cp -v "app/build/reports/findbugs/findbugs.xml" "$ARTIFACTS/"
            cp -v "app/build/reports/pmd/pmd.xml" "$ARTIFACTS/"
            cp -v "app/build/reports/pmd/cpd.xml" "$ARTIFACTS/"
            cp -v "app/build/reports/lint-results.xml" "$ARTIFACTS/"
      - store_artifacts:
          path: "/tmp/circle_artifacts"

      - run:
          name: Build apk
          command: ./gradlew :app:assembleDebug
      - store_artifacts:
          path: app/build/outputs/apk/app-debug.apk
          destination: app-debug.apk
      - store_test_results:
          path: app/build/test-results
      - persist_to_workspace:
          root: ~/code
          paths:
            - .

  deploy:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/code
      - run:
          name: Start emulator
          command: emulator -avd circleci-android22 -no-audio -no-window
          background: true
      - run:
          name: Install Appium
          command: npm install -g appium
      - run:
          name: Start emulator
          command: appium > /tmp/appium_log.txt
          background: true
      - run:
          name: UI test
          command: |
            git clone git@github.com:noboru-i/kyouen-ui-test.git
            circle-android wait-for-boot
            sleep 30
            adb shell input keyevent 82
            # test by Appium
            cd kyouen-ui-test; bundle install; OS=android bundle exec rspec spec
      - store_artifacts:
          path: /tmp/appium_log.txt
      - store_artifacts:
          path: kyouen-ui-test/ss
      - run:
          name: Build apk
          command: ./gradlew :app:uploadDeployGateDebug :app:uploadDeployGateRelease
      - store_artifacts:
          path: app/build/outputs/apk/app-release.apk
          destination: app-release.apk
      - store_artifacts:
          path: app/build/outputs/mapping/release/dump.txt
          destination: dump.txt
workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: try-appium